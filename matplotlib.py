# -*- coding: utf-8 -*-
"""matplotlib.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/176EEDeIRtOvXb6AgXvf6qkJaNlr3pD58
"""

import matplotlib.pyplot as plt
import numpy as np
import  pandas as pd

"""# Line Plot"""

x=[0,1,2,3,4,5]
 y=[0,10,20,30,40,50]
 plt.plot(x,y)
 plt.title("simple plot")
 plt.xlabel("x-axis")
 plt.ylabel("y-axis")
 plt.show()

x=[0,1,2,3,4,5]
y=[i**2 for i in x]
plt.plot(x,y)
plt.title("simple plot")
plt.xlabel("x-axis")
plt.ylabel("y-axis")
plt.show()

plt.plot([10,200,300,400])
plt.show()

x=np.arange(0,10,2)
 y=[i**2 for  i in x]
 plt.plot(x,y)
 plt.title("simple plot")
 plt.xlabel("x-axis")
 plt.ylabel("y-axis")
 plt.show()

x= np.arange(0,10,2)
y=x**2
print(x,y)
plt.plot(x,y,marker="o",ms="15",mec="r",mfc="g ")
plt.show()

x=np.arange(0,10,2)
y=x**2
print(x,y)
plt.plot(x,y,marker="o",ls="dashed",c="pink",lw="10")
plt.show()

x=np.arange(0,10,2)
y=x**2
print(x,y)
plt.plot(x,y,marker="o",ls="none",)
plt.show()

x=np.arange(0,10,2)
y1=x**2
y2=x**3
print(x,y)
plt.plot(x,y1,marker="o",ls="dashed",)
plt.plot(x,y2,marker="s ",ls="dashdot")
plt.show()

x=np.arange(0,10,2)
y=x*10
plt.plot(x,y)
f1={'family':'monospace','color':'red','size':20}
f2={'family':'Arial','color':'b','size':20}
f3={'family':'Courier','color':'g','size':20}
plt.title("sample plot",fontdict=f1)
plt.xlabel("x-values",fontdict=f2)
plt.ylabel ("x multiplies 10",fontdict=f3)
plt.show()

import matplotlib.pyplot as plt
 x = [1,2,3,4,5]
 y= [ 30,20,10,40,50]
 plt.plot(x,y)
 plt.grid(axis="x",ls="dotted",lw="2",c="green")
 plt.show()

"""# ***SubPlot***"""

x = [0,1,2,3,4]
y1 = [50,20,30,10,40]
y2 = [40,50,20,30,10]
y3 = [40,50,20,30,10]
y4 = [40,50,20,30,10]
plt.subplot(2,2,1)
plt.plot(x,y1)

plt.subplot(2,2,2)
plt.plot(x,y2)

plt.subplot(2,2,3)
plt.plot(x,y3)

plt.subplot(2,2,4)
plt.plot(x,y4)

plt.show()

x = [0,1,2,3,4]
y1 = [50,20,30,10,40]
y2 = [40,50,20,30,10]
y3 = [40,50,20,30,10]
y4 = [40,50,20,30,10]
plt.suptitle("MOUNIKA")
plt.subplot(1,3,1)
plt.plot(x,y1)
plt.title("M")

plt.subplot(1,3,2)
plt.plot(x,y2)
plt.title("N")

plt.subplot(1,3,3)
plt.plot(x,y3)
plt.title("Q")

#plt.subplot(1,3,4)
#plt.plot(x,y4)

plt.show()

import matplotlib.pyplot as plt
import numpy as np
x = np.arange(0,5,1)
y1 = x**2
y2 = x**3
plt.plot(x,y1,x,y2)
plt.legend(["squares","cubes"])
plt.show()

import matplotlib.pyplot as plt
import numpy as np
x = np.arange(0,5,1)
y1 = x**2
y2 = x**3
plt.plot(x,y1,x,y2)
plt.plot(x,y1,label="squares")
plt.plot(x,y2,label="cubes")
plt.legend()
plt.show()

import matplotlib.pyplot as plt
import numpy as np
x = np.arange(0,5,1)
y1 = x**2
y2 = x**3
plt.plot(x,y1,x,y2)
plt.plot(x,y1,label="squares")
plt.plot(x,y2,label="cubes")
plt.legend(loc=1)
plt.show()

import matplotlib.pyplot as plt
import numpy as np
x = np.arange(0,5,1)
y1 = x**2
y2 = x**3
plt.plot(x,y1,x,y2)
plt.plot(x,y1,label="squares")
plt.plot(x,y2,label="cubes")
plt.legend(loc = "center")
plt.show()

import matplotlib.pyplot as plt
import numpy as np
x = np.arange(0,5,1)
y1 = x**2
y2 = x**3
plt.plot(x,y1,x,y2)
plt.plot(x,y1,label="squares")
plt.plot(x,y2,label="cubes")
plt.legend(loc = "upper right")
plt.show()

import matplotlib.pyplot as plt
import numpy as np
x = np.arange(0,5,1)
y1 = x**2
y2 = x**3
plt.plot(x,y1,x,y2)
plt.plot(x,y1,label="squares")
plt.plot(x,y2,label="cubes")
plt.legend(loc = "upper left",framealpha=1,facecolor="red",edgecolor="black",fancybox=True,shadow=True)
plt.show()

"""# Scatter **Plot**"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import random

x=[1,2,3,4,5,6,7,8,9,10]
y=[10,20,30,40,50,60,70,80,90,100]
random.shuffle(y)

plt.scatter(x,y)
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import random

x=[1,2,3,4,5,6,7,8,9,10]
y=[10,20,30,40,50,60,70,80,90,100]
random.shuffle(y)

x1=[1,2,3,4,5,6,7,8,9,10]
y1=[10,20,30,40,50,60,70,80,90,100]
random.shuffle(y1)

plt.scatter(x,y)
plt.scatter(x1,y1)
plt.show()

x=[1,2,3,4,5,6,7,8,9,10]
y=[10,20,30,40,50,60,70,80,90,100]
random.shuffle(y)

x1=[1,2,3,4,5,6,7,8,9,10]
y1=[10,20,30,40,50,60,70,80,90,100]
random.shuffle(y1)

plt.scatter(x,y,color="pink",marker="s",s=100,linewidth=10,alpha=0.5)
plt.scatter(x1,y1,color="blue",marker="^",s=150,linewidth=10,alpha=0.5)
print(x,y)
print(x1,y1)
plt.show()

x=[2,3,4,6,7,9,]
y=[40,60,30,50,20,70]
colors=["red","green","pink","black","blue","orange"]
sizes=[100,50,200,250,150,300]

plt.scatter(x,y,c=colors,s=sizes )
print(x,y)
plt.show()

x=[2,3,4,6,7,9,]
y=[40,60,30,50,20,70]
colors=["red","green","pink","black","blue","orange"]
sizes=[100,50,200,250,150,300]

plt.scatter(x,y,c=colors,s=sizes,cmap="viridis" )
plt.colorbar()
print(x,y)
plt.show()

"""# Bar **Chart**"""

x=[1,2,3,4]
y=[200,500,800,200]

plt.bar(x,y,color="pink",width=0.2)
plt.show()

x=[1,2,3,4]
y=[200,500,800,200]
c=["red","pink","yellow","blue"]

plt.barh(x,y,color=c,height=0.5)
plt.show()

x=(2021,2022,2023,2024,2025)
y=(256,304,129,503,306)
c=["red","pink","yellow","blue"]

plt.bar(x,y,color=c,width=0.2)
print(x,y)
plt.xlabel("year")
plt.ylabel("placements")
plt.show()

x=["2021","2022","2023","2024"]
y=[150,275,324,295]

cse=[75,80,47,82]
it=[46,58,35,52]
ece=[67,59,72,62]

ece_start=[cse[i]+it[i] for i in range(len(cse))]

plt.title("placements comparision by using stacked chart")

plt.bar(x,cse,width=0.4,color="red")
plt.bar(x,it,bottom=cse,width=0.4,color="blue")
plt.bar(x,ece,bottom=ece_start,width=0.4,color="green")

plt.ylim(0,225)
plt.show()

x=["2021","2022","2023","2024"]
y=[150,275,324,295]

cse=[75,80,47,82]
it=[46,58,35,52]
ece=[67,59,72,62]
eee=[53,47,36,52]

ece_start=[cse[i]+it[i] for i in range(len(cse))]
eee_start=[ece_start[i]+ece[i] for i in range(len(ece))]

plt.title("placements comparision by using stacked chart")

plt.barh(x,cse,height=0.4,color="red",label="CSE")
plt.barh(x,it,left=cse,height=0.4,color="blue",label="IT")
plt.barh(x,ece,left=ece_start,height=0.4,color="green",label="ece")
plt.barh(x,eee,left=eee_start,height=0.4,color="yellow",label="eee")


plt.xlabel("years")
plt.ylabel("placements")
plt.xlim(0,350)
plt.legend()
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

years = ["2018","2019","2020","2021"]

cse=[74,82,89,79]
it=[58,72,76,61]
ece=[67,74,81,68]
eee=[53,45,57,41]

w = 0.2

cse_bar=np.arange(len(years))
it_bar=[i+w for i in cse_bar]
ece_bar=[i+w for i in it_bar]
eee_bar=[i+w for i in ece_bar]

plt.bar(cse_bar,cse,width=w,label="CSE")
plt.bar(it_bar,it,width=w,label="IT")
plt.bar(ece_bar,ece,width=w,label="ECE")
plt.bar(eee_bar,cse,width=w,label="EEE")

plt.title("PLACEMENTS COUNT")
plt.xticks(cse_bar+w+w/2,years)
plt.ylim(0,100)
plt.xlabel("years")
plt.ylabel("placements count")


plt.legend()
plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

"""# Pie Chart"""

student_performances=["excelent","good","average","poor"]
student_values = [15,25,12,8]

plt.figure(figsize=(8,10))

plt.pie(student_values,labels=student_performances,startangle=90,explode=[0.2,0,0,0],shadow=True,autopct="%2.1f%%",colors=["blue","pink","yellow","black"])

plt.legend(title="performances")
plt.show()

"""# Histogram"""

marks = [90,50,40,60,55,44,30,10,34,84]
grades = [0,35,70,100]

plt.hist(marks,grades,histtype="bar",rwidth=0.7,facecolor="g")

plt.xticks([0,35,70,100])

plt.title("STUDENT MARKS")

plt.xlabel("grades")
plt.ylabel("no of students")

plt.show()

marks = [90,50,40,60,55,44,30,10,34,84]
grades = [0,35,70,100]

plt.hist(marks,grades,histtype="step",facecolor="g")

plt.xticks([0,35,70,100])

plt.title("STUDENT MARKS")

plt.xlabel("grades")
plt.ylabel("no of students")

plt.show()

marks = [90,50,40,60,55,44,30,10,34,84]
grades = [0,35,70,100]

plt.hist(marks,grades,histtype="stepfilled",facecolor="g")

plt.xticks([0,35,70,100])

plt.title("STUDENT MARKS")

plt.xlabel("grades")
plt.ylabel("no of students")

plt.show()

x = [1,2,3,4,5]
y = [10,50,100,80,60]
plt.scatter(x,y,s=100,alpha=1,color="green",label="2024")


plt.show()

x = [1,2,3,4,5]
y = [10,50,100,80,60]
plt.scatter(x,y,s=10,alpha=1,color="green",label="2024")

x1 = [1,2,3,4,5]
y1 = [10,50,100,80,60]
plt.scatter(x1,y1,s=300,alpha=1,color="blue",label="2025")

plt.legend()
plt.title("Scatter Plot")
plt.show()

import matplotlib.pyplot as plt

x = [10,20,30,40,50]
y = [100,200,300,400,500]

plt.plot(x,y)

plt.xlabel("x-axis")
plt.ylabel("y-axis")

plt.xlim(10,100)
plt.ylim(100,1000)

plt.show()

x = [10,20,30,40,50]
y = [100,200,300,400,500]

plt.plot(x,y)

plt.xlabel("x-axis")
plt.ylabel("y-axis")

plt.xticks(x,['a','b','c','d','e'])
plt.yticks(y,['0-100','100-200','200-300','300-400','400-500'])

plt.show()

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

data = np.random.randn(1000)
plt.hist(data,bins =30,color="blue",alpha=0.7,edgecolor="black")
plt.xlabel("value")
plt.ylabel("frequency")
plt.title("histogram example")
plt.show()

"""# KDE Plot"""

import seaborn as sns
sns.kdeplot(data,color="red")
plt.xlabel("value")
plt.ylabel("density")
plt.title("histogram example")
plt.show()

"""# Violin Plot"""

import seaborn as sns
sns.violinplot(data=data)
plt.xlabel("value")
plt.ylabel("density")
plt.title("violon example")
plt.show()



