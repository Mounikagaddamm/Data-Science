# -*- coding: utf-8 -*-
"""pandas.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ve9Z0Vz1nOJ4jW_vtObRLauejecu5buM
"""

import numpy as np
import pandas as pd

"""# series"""

s = pd.Series([1,2,3,4])
 print(s)

s = pd.Series([1,3,5,7,9])
print(s.describe())

print(s.mean())

print(s.std())

s.min()

s.max()

print(s.min())
print(s.max())

doubles = s.map(lambda x:x*2)
doubles

sqrt = s.apply(lambda x:x**2)
print(sqrt)

s = pd.Series([1,10,5,8,3,9])
print(s)

sort = s.sort_values()
print(sort)

droped = s.drop(2)
print(droped)

import pandas as pd
s = pd.Series([1,10,5,8,3,9])
print(s)

print(s.isnull())

print(s.notnull())

import numpy as np
s = pd.Series([1,np.NAN,3,np.NAN,4,5])
print(s)

filled = s.fillna(10)
print(filled)

dropped = s.dropna()
print(dropped)

s = pd.Series([1,10,5,8,5])
print(s)

"""# Indexing And Slicing"""

print(s.iloc[1])
print(s.iloc[4])

print(s.iloc[-1])

print(s)

s = pd.Series([1,2,3,4,5] , index=['a','b','c','d','e'])
print(s)

print(s.iloc[0])
print(s.iloc[1:4])

print(s.loc['a'])
print(s.loc['a':'d'])

filterd = s[s>4]
print(filterd)

print(s.sum())

print(s.cumsum())



agg = s.aggregate(['sum','mean','std','min','max'])
print(agg)

"""# Data Frames"""

import numpy as np
import pandas as pd
data = {
    'name' :['mounika','lucky','lavu','chandhu','mani'],
    'phone no' : ['111','222','333','444','555'],
    'gmail' : ['m@','l@','ll@','c@','mm@']
}

df = pd.DataFrame(data)
print(df)

a_data = {
    'name' :['m','n','o','p','q'],
    'phone no' : ['111','222','333','444','555']
  }
df1 = pd.DataFrame(a_data)

b_data = {
    'gmail' : ['m@','n@','o@','p@','q@'],
    'blood_group' : ['a+','b+','a-','b-','o+']

}
df2 = pd.DataFrame(b_data)

merge_data = pd.merge(df1,df2,left_on='name',right_on='gmail',how='inner')
print(merge_data)

data = pd.read_csv('/content/Marks.csv')
df = pd.DataFrame(data)
print(df)

df.head(10)

df.tail(5)

df.shape

df.columns

df.dtypes

df.describe()

df.head(5)

df.columns

A = df.loc[:, 'Product_ID']
A

A = df.loc[10:20,['Product_ID','Price']]
A

A = df.loc[df['Product_ID']=='P1001']
A

A = df.loc[(df['Product_ID']=='P1001') & (df['Price']>3000)]
A

A = df.iloc[0]
A

A = df.iloc[10,[1,2,3]]
A

A = df.iloc[10:20,0:4]
A

A = df.at[0,'Price']
A

A = df[df['Price']>2000]
A

A = df[(df['Price']>2000) & (df['Stock']>=100)]
A

A = df[df['Category']=='Toys']
A

df.drop(labels='Brand',axis=1)

df

df.at[0,'Price']=2210
df.head(5)

df['new_column']='default value'
df

df.drop(axis=1,labels='new_column',inplace=True)
df

"""# Groupby()"""

import numpy as np
import pandas as pd

data = {
    'emp_id' : [1,2,3,4,5,6,7,8,9,10],
    'emp_name' : ['ram','sita','krishna','radha','venkateswara','lakshmi','shiv','parvathi','mounika','rishika'],
    'emp_salary' : [1000,2000,3000,4000,5000,6000,7000,8000,9000,10000],
    'emp_gender' :['m','m','f','f','f','m','m','m','f','m']
}
df = pd.DataFrame(data)
df

"""# Groupby() + Aggregation"""

df.groupby('emp_gender')['emp_salary'].mean()

df.groupby('emp_gender')['emp_id'].count()

"""# Multiple Aggregations"""

df.groupby('emp_gender')['emp_salary'].agg(['mean','count','sum'])

df.groupby('emp_gender')['emp_salary'].agg(
    max_salary = 'max',
    min_salary = 'min',
    count = 'count'
)

df.groupby(['emp_gender','emp_salary']).size()

df.groupby(['emp_salary','emp_gender']).size()

df.groupby('emp_name').filter(lambda x :(x['emp_name'].str.len()>3).any())

df[df['emp_name'].str.startswith('r')]