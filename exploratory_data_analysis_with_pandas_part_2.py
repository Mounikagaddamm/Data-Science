# -*- coding: utf-8 -*-
"""Exploratory Data Analysis With Pandas : Part-2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LtwZwg7QP5KgkXK_5xVj5jeWcRwOmmfk

# Exploratory Data Analysis With Pandas : Part-2
"""

import pandas as pd
 import numpy as np

data = pd.read_csv('/content/Marks.csv')
df = pd.DataFrame(data)
print(df)

"""# File Export"""

df.to_csv('/content/Marks.csv')

"""# Advanced Data Queries"""

df.query('Price > 19')

df[df['Discount'].isin([10,1000])]

"""# Dealing with Duplicates"""

df.duplicated()

df.drop_duplicates()

"""# Integration with Matplotlib for Custom Plots"""

import matplotlib.pyplot as plt; df.plot(); plt.show()

"""# Visualization Enhancement"""

plt.style.use('ggplot')

df['Price'].hist(bins=20)

df.boxplot(column='Price',by='Discount')

"""# Advanced Grouping And Aggregation"""

import numpy as np
import pandas as pd
data = pd.read_csv('/content/Marks.csv')
df = pd.DataFrame(data)
print(df)

df['Price'] = pd.to_numeric(df['Price'], errors='coerce')

df.columns = df.columns.str.strip()

df.groupby('Discount')['Price'].mean()

df.groupby('Discount')['Price'].agg([np.mean,sum,min,max])

"""# Dealing with Missing Data"""

df['Price'].interpolate()

df['Price'].ffill()

df['Price'].bfill()

"""# Advanced Indexing"""

df.reset_index(drop=True)

df.set_index(['Price','Discount'])

"""# Efficient Computations"""

df.eval('Price + Discount')

df.query('Price<Discount')

"""# Data Merging Techniques"""

df1 = {
    'name' :['mounika','lucky','lavu','chandhu','mani'],
    'phone no' : ['111','222','333','444','555'],
    'gmail' :['m@','l@','ll@','c@','mm@']
}
df2 = {
    'name' :['rishika','naga lakshmi','Prasad','rishika s bro','rishika s Mama'],
    'phone no' : ['111','222','333','444','555'],
    'gmail' :['m@','l@','ll@','c@','mm@']
}

df1 = pd.DataFrame(df1)
df2 = pd.DataFrame(df2)

df1

df2

pd.merge(df1,df2,on='phone no',how='outer')

pd.merge(df1,df2,on='phone no',how='inner')

pd.merge(df1,df2,on='phone no',how='left')

pd.merge(df1,df2,on='phone no',how='right')